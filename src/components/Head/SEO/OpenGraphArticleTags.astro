---
import type { OpenGraphSchema } from "./AstroSEO.astro"
import * as parseUtils from "@/utils/parse-utils"

type Props = {
  article?: OpenGraphSchema["article"]
}
const props = Astro.props

// const openGraphSchema = props.openGraph ?? {}
// const article = ("article" in openGraphSchema ? openGraphSchema.article : {}) as OpenGraphSchema["article"]

const article = parseUtils.isDefined(props.article) ? props.article : null

const publishedTime = parseUtils.isDefined(article) ? article.publishedTime : null
const modifiedTime = parseUtils.isDefined(article) ? article.modifiedTime : null
const expirationTime = parseUtils.isDefined(article) ? article.expirationTime : null
const authors = parseUtils.isDefined(article) ? article.authors : null
const section = parseUtils.isDefined(article) ? article.section : null
const tags = parseUtils.isDefined(article) ? article.tags : null
---

{publishedTime ? <meta property="article:published_time" content={publishedTime} /> : null}
{modifiedTime ? <meta property="article:modified_time" content={modifiedTime} /> : null}
{expirationTime ? <meta property="article:expiration_time" content={expirationTime} /> : null}
{authors ? authors.map((author: string) => <meta property="article:author" content={author} />) : null}
{section ? <meta property="article:section" content={section} /> : null}
{tags ? tags.map((tag: string) => <meta property="article:tag" content={tag} />) : null}
